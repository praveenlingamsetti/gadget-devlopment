{"version":3,"sources":["/var/gadget/codegen/framework-1729658840843-gRxkn5/src/index.ts"],"sourcesContent":["/**\n* This is the Gadget server side types library for:\n*\n*   _                                                                       _                _                                  _   \n*  (_)    __      ____ _ ___        __ _       ___  __ _ _ __ ___        __| | _____   _____| | ___  _ __  _ __ ___   ___ _ __ | |_ \n*  | |____\\ \\ /\\ / / _` / __|_____ / _` |_____/ __|/ _` | '__/ _ \\_____ / _` |/ _ \\ \\ / / _ \\ |/ _ \\| '_ \\| '_ ` _ \\ / _ \\ '_ \\| __|\n*  | |_____\\ V  V / (_| \\__ \\_____| (_| |_____\\__ \\ (_| | | |  __/_____| (_| |  __/\\ V /  __/ | (_) | |_) | | | | | |  __/ | | | |_ \n*  |_|      \\_/\\_/ \\__,_|___/      \\__,_|     |___/\\__,_|_|  \\___|      \\__,_|\\___| \\_/ \\___|_|\\___/| .__/|_| |_| |_|\\___|_| |_|\\__|\n*                                                                                                   |_|                             \n*\n* Built for environment `Development` at version 42\n* Framework version: ^1.3.0\n* Edit this app here: https://i-was-a-sare-development.gadget.dev/edit\n*/\nimport type { Client } from \"@gadget-client/i-was-a-sare-development\";\nimport { Logger } from \"./AmbientContext\";\nexport { InvalidRecordError } from '@gadgetinc/api-client-core'\n\nexport * from \"./metadataFileTypes\";\nexport * from \"./AmbientContext\";\nexport * from \"./AppConfigs\";\nexport * from \"./AppConfiguration\";\nexport * from \"./AppConnections\";\nimport { AppConnections } from \"./AppConnections\";\nexport * from \"./auth\";\nexport * as DefaultEmailTemplates from \"./email-templates\";\nexport * from \"./emails\";\nexport { InvalidStateTransitionError } from \"./errors\";\nexport * from \"./global-actions\";\nexport * from \"./routes\";\nexport * from \"./state-chart\";\nexport * from \"./types\";\nexport * from \"./ActionOptions\";\nexport * from \"./effects\";\nexport * from \"./utils\";\nimport type { RouteContext } from \"./routes\";\nexport * from \"./ActionContextTypes\";\n\nexport {\n  preventCrossShopDataAccess,\n  ShopifyBulkOperationState,\n  ShopifySellingPlanGroupProductState,\n  ShopifySellingPlanGroupProductVariantState,\n  ShopifyShopState,\n  ShopifySyncState,\n  abortSync,\n  finishBulkOperation,\n  globalShopifySync,\n  shopifySync,\n} from \"./shopify\";\n\n/**\n * @internal\n */\nimport { Globals, actionContextLocalStorage } from \"./globals\";\nexport * from \"./models/Session\";\nexport * from \"./models/ShopifyShop\";\nexport * from \"./models/ShopifyGdprRequest\";\nexport * from \"./models/ShopifyProduct\";\nexport * from \"./models/ShopifyProductVariant\";\nexport * from \"./models/ShopifyInventoryItem\";\nexport * from \"./models/ShopifyLocation\";\nexport * from \"./models/ShopifyInventoryLevel\";\nexport * from \"./models/ShopifyOrder\";\nexport * from \"./models/ShopifyOrderLineItem\";\nexport * from \"./models/ShopifySync\";\nexport * from \"./models/DraftedProduct\";\n\n/**\n* A map of connection name to instantiated connection objects for the app.\n*/\nlet connections: AppConnections;\n\n/**\n * An instance of the Gadget logger\n */\nlet logger: Logger;\n/**\n * An instance of the Gadget API client that has admin permissions\n */\nlet api: Client;\n\n/**\n* This is used internally to set the connections.\n* @internal\n*/\nexport const setConnections = (appConnections: AppConnections) => {\n  connections = new Proxy(appConnections, {\n    get: (target: any, prop: string) => {\n      const actionContext = actionContextLocalStorage.getStore();\n      if(actionContext && actionContext.connections) {\n        return actionContext.connections[prop];\n      }\n\n      const routeContext = Globals.requestContext.get(\"requestContext\");\n      if(routeContext && routeContext.connections) {\n        return routeContext.connections[prop];\n      }\n\n      return target[prop];\n    }\n  })\n}\n\n/**\n * This is used internally to set the rootLogger.\n * @internal\n */\nexport const setLogger = (rootLogger: Logger) => {\n  // set the internal facing global logger to be this instance, which is tagged with the platform source\n  Globals.logger = rootLogger;\n\n  // set the user-facing global logger to be this instance tagged with the user source, as users are importing this global and using it\n  logger = rootLogger.child({ source: \"user\" });\n};\n\n/**\n * This is used internally to set the client Instance\n * @internal\n */\nexport const setApiClient = (client: Client) => {\n  api = client;\n}\n\nexport {\n  api, logger, connections\n};\n\n/**\n * @internal\n */\nexport {\n  Globals,\n  actionContextLocalStorage\n};\n\n"],"names":["DefaultEmailTemplates","Globals","InvalidRecordError","InvalidStateTransitionError","ShopifyBulkOperationState","ShopifySellingPlanGroupProductState","ShopifySellingPlanGroupProductVariantState","ShopifyShopState","ShopifySyncState","abortSync","actionContextLocalStorage","api","connections","finishBulkOperation","globalShopifySync","logger","preventCrossShopDataAccess","setApiClient","setConnections","setLogger","shopifySync","appConnections","Proxy","get","target","prop","actionContext","getStore","routeContext","requestContext","rootLogger","child","source","client"],"mappings":";;;;;;;;;;;IAyBYA,qBAAqB;;;IAuGjC;;CAEC,GAECC,OAAO;eAAPA,gBAAO;;IApIT;;;;;;;;;;;;;AAaA,GAGSC,kBAAkB;eAAlBA,iCAAkB;;IAWlBC,2BAA2B;eAA3BA,mCAA2B;;IAalCC,yBAAyB;eAAzBA,kCAAyB;;IACzBC,mCAAmC;eAAnCA,4CAAmC;;IACnCC,0CAA0C;eAA1CA,mDAA0C;;IAC1CC,gBAAgB;eAAhBA,yBAAgB;;IAChBC,gBAAgB;eAAhBA,yBAAgB;;IAChBC,SAAS;eAATA,kBAAS;;IAwFTC,yBAAyB;eAAzBA,kCAAyB;;IARzBC,GAAG;eAAHA;;IAAaC,WAAW;eAAXA;;IA/EbC,mBAAmB;eAAnBA,4BAAmB;;IACnBC,iBAAiB;eAAjBA,0BAAiB;;IA8EZC,MAAM;eAANA;;IAtFLC,0BAA0B;eAA1BA,mCAA0B;;IAiFfC,YAAY;eAAZA;;IAlCAC,cAAc;eAAdA;;IAsBAC,SAAS;eAATA;;IA5DXC,WAAW;eAAXA,oBAAW;;;+BAhCsB;qBAErB;qBACA;qBACA;qBACA;qBACA;qBAEA;wEACyB;qBACzB;wBAC8B;qBAC9B;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBAEA;yBAaP;yBAEP;;CAEC,GACkD;qBACrC;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEd;;AAEA,GACA,IAAIR;AAEJ;;CAEC,GACD,IAAIG;AACJ;;CAEC,GACD,IAAIJ;AAEJ;;;AAGA,GACO,MAAMO,iBAAiB,CAACG;IAC7BT,cAAc,IAAIU,MAAMD,gBAAgB;QACtCE,KAAK,CAACC,QAAaC;YACjB,MAAMC,gBAAgBhB,kCAAyB,CAACiB,QAAQ;YACxD,IAAGD,iBAAiBA,cAAcd,WAAW,EAAE;gBAC7C,OAAOc,cAAcd,WAAW,CAACa,KAAK;YACxC;YAEA,MAAMG,eAAe3B,gBAAO,CAAC4B,cAAc,CAACN,GAAG,CAAC;YAChD,IAAGK,gBAAgBA,aAAahB,WAAW,EAAE;gBAC3C,OAAOgB,aAAahB,WAAW,CAACa,KAAK;YACvC;YAEA,OAAOD,MAAM,CAACC,KAAK;QACrB;IACF;AACF;AAEA;;;CAGC,GACM,MAAMN,YAAY,CAACW;IACxB,sGAAsG;IACtG7B,gBAAO,CAACc,MAAM,GAAGe;IAEjB,qIAAqI;IACrIf,SAASe,WAAWC,KAAK,CAAC;QAAEC,QAAQ;IAAO;AAC7C;AAEA;;;CAGC,GACM,MAAMf,eAAe,CAACgB;IAC3BtB,MAAMsB;AACR"}